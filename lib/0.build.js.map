{"version":3,"file":"0.build.js","sources":["webpack:///./src/client/Components/Menu/FoodListTable/FoodListTitle/index.tsx","webpack:///./src/client/Components/Menu/FoodListTable/index.tsx","webpack:///./src/client/Components/Menu/FoodListTable/style.ts","webpack:///./src/client/Components/Menu/subFoodModal/style.tsx","webpack:///./src/client/Components/Menu/subFoodModal/subFood.tsx"],"sourcesContent":["import React from 'react';\r\ninterface IProps {\r\n\tcategory: string | undefined,\r\n\tid: string | undefined\r\n}\r\nconst FoodListTitle = ({ category, id }: IProps) => {\r\n\treturn (\r\n\t\t<h2 id={id}>\r\n\t\t\t<span>{category}</span>\r\n\t\t</h2>\r\n\t);\r\n};\r\n\r\nexport default FoodListTitle;\r\n","import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeSubFoodModal } from '../../../Redux/subFood/action';\r\n\r\nimport Food from './food/index';\r\nimport SubFood from '../subFoodModal/subFood';\r\nimport FoodListTitle from './FoodListTitle/index';\r\nimport Spinner from '../../Spinner/index';\r\nconst Modal = lazy(() => import('../../Modal/index'));\r\nconst SearchBar = lazy(() => import('./searchBar/searchBar'));\r\nimport { IApplicationState } from '../../../Redux/reducers';\r\nimport { ISubFood, IFoodList, SubFoodState } from '../../../../Types/index';\r\n\r\nimport { FoodList, NotFoundStyle, FoodMenu } from './style';\r\n\r\nconst Sort = lazy(() => import('../sort'));\r\n\r\ninterface ITest2 {\r\n\tfield: string,\r\n\tasc: boolean\r\n}\r\ninterface ITest {\r\n\t[key: string]: ITest2\r\n}\r\nconst sortBy: ITest = {\r\n\tlowestprice: { field: 'price', asc: true },\r\n\thighestprice: { field: 'price', asc: false }\r\n};\r\ninterface IProps {\r\n\titemFood: IFoodList[]\r\n}\r\nconst FoodListTable: React.SFC<IProps> = ({ itemFood }: IProps) => {\r\n\tconst originalItems = [...itemFood];\r\n\tconst row = [];\r\n\tlet lastCategory: string | undefined = '';\r\n\r\n\tconst subFood = useSelector<IApplicationState, SubFoodState>(state => state.subFood);\r\n\tconst [foodList, setFoodList] = useState(itemFood);\r\n\tconst [searchKey, setSearchKey] = useState('');\r\n\tconst [inStock, setInStock] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch(searchKey, inStock);\r\n\t}, []);\r\n\r\n\tconst NotFound = () => {\r\n\t\treturn <NotFoundStyle>نتیجه ای پیدا نشد.</NotFoundStyle>;\r\n\t};\r\n\r\n\tconst search = (text: string, stock: boolean, list = itemFood) => {\r\n\t\tlet newList = list;\r\n\t\tlet result = [];\r\n\t\tlet searchIngredient = list;\r\n\t\tif (stock) {\r\n\t\t\tnewList = newList.filter(item => item.available);\r\n\t\t}\r\n\t\tif (text) {\r\n\t\t\tnewList = newList.filter(item => item.title.indexOf(text) > -1);\r\n\t\t\tsearchIngredient = searchIngredient.filter(item => item.ingredient.indexOf(text) > -1);\r\n\t\t\tresult = newList.concat(searchIngredient);\r\n\t\t} else {\r\n\t\t\tnewList ? (result = newList) : (result = itemFood);\r\n\t\t}\r\n\t\tsetFoodList(result);\r\n\t};\r\n\r\n\tconst searchHandler = (text: string) => {\r\n\t\tsearch(text, inStock);\r\n\t\tsetSearchKey(text);\r\n\t};\r\n\r\n\tconst stockHandler = (value: boolean) => {\r\n\t\tsearch(searchKey, value);\r\n\t\tsetInStock(value);\r\n\t};\r\n\r\n\tconst sortHandler = (value: string) => {\r\n\t\tlet newItem: IFoodList[] = [];\r\n\t\tconst sortItem = sortBy[value];\r\n\t\tif (sortItem) {\r\n\t\t\tconst index = sortItem.asc ? 1 : -1;\r\n\t\t\tnewItem = originalItems.sort((a, b) => {\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t//        a.catIndex - b.catIndex ||\r\n\t\t\t\t\t//          a.catId - b.catId ||\r\n\t\t\t\t\t(a.categoryIndex - b.categoryIndex) || ((a[sortItem.field] - b[sortItem.field]) * index)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tnewItem = originalItems;\r\n\t\t}\r\n\t\tsearch(searchKey, inStock, newItem);\r\n\t};\r\n\r\n\tif (foodList.length > 0) {\r\n\t\tfoodList.forEach((food) => {\r\n\t\t\tif (food.categoryTitle !== lastCategory) {\r\n\t\t\t\trow.push(<FoodListTitle category={food.categoryTitle} id={food.catId?.toString()} />);\r\n\t\t\t}\r\n\t\t\trow.push(<Food food={food} />);\r\n\t\t\tlastCategory = food.categoryTitle;\r\n\t\t});\r\n\t} else {\r\n\t\trow.push(<NotFound />);\r\n\t}\r\n\r\n\tconsole.log(subFood);\r\n\treturn (\r\n\t\t<FoodMenu>\r\n\t\t\t<Suspense fallback={<Spinner />}>\r\n\t\t\t\t<Sort onChange={sortHandler} />\r\n\t\t\t\t<SearchBar\r\n\t\t\t\t\tfilterText={searchKey}\r\n\t\t\t\t\tonfilterText={searchHandler}\r\n\t\t\t\t\tinStock={inStock}\r\n\t\t\t\t\tonChangeStock={stockHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tsubFood.show ?\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\tshow={subFood.show}\r\n\t\t\t\t\t\t\t\tonClose={() => dispatch(closeSubFoodModal(true))}\r\n\t\t\t\t\t\t\t\tclassName='subFoodModal'\r\n\t\t\t\t\t\t\t\tsubFood\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SubFood subFood={subFood.food} />\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<FoodList>{row}</FoodList>\r\n\t\t\t</Suspense>\r\n\t\t</FoodMenu>\r\n\t);\r\n};\r\n\r\n\r\nexport default FoodListTable;\r\n","import styled from 'styled-components';\r\nimport { FoodItem } from './food/style';\r\nexport const NotFoundStyle = styled.div``;\r\nexport const FoodList = styled.div`\r\n  direction: rtl;\r\n  float: right;\r\n  width: 100%;\r\n  padding: 0 15px;\r\n  min-height: 550px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  ${NotFoundStyle} {\r\n    position: absolute;\r\n    top: 30px;\r\n    font-size: 20px;\r\n    color: #b1b1b1;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    padding: 0;\r\n    ${FoodItem} {\r\n      width: 50%;\r\n      section {\r\n        transition: all 0.25s cubic-bezier(0.19, 1, 0.22, 1.06);\r\n        &:hover {\r\n          box-shadow: 0px 14px 20px rgba(56, 60, 71, 0.1);\r\n          transform: translateY(-2px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n// .food-item {\r\n//   width: 50%;\r\n//   section {\r\n//     transition: all 0.25s cubic-bezier(0.19, 1, 0.22, 1.06);\r\n//     &:hover {\r\n//       box-shadow: 0px 14px 20px rgba(56, 60, 71, 0.1);\r\n//       transform: translateY(-2px);\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const FoodMenu = styled.div`\r\n  padding-bottom: 15px;\r\n  min-height: 700px;\r\n  .sort {\r\n    float: right;\r\n    select {\r\n      background-color: #fff;\r\n      outline: none;\r\n      border: 1px solid #ececec;\r\n      border-radius: 2px;\r\n      margin-left: 10px;\r\n      width: auto;\r\n      height: 35px;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        border: 1px solid #5b5a5e;\r\n      }\r\n    }\r\n  }\r\n  h2 {\r\n    clear: both;\r\n    padding: 0 10px;\r\n    color: #888;\r\n    font-size: 20px;\r\n    font-size: 1.25rem;\r\n    direction: rtl;\r\n  }\r\n  @media only screen and (min-width: 767px) {\r\n    .parent-modal {\r\n      //   overflow-y: scroll;\r\n      .lightInner {\r\n        width: 100%;\r\n        z-index: 6000;\r\n        height: 100%;\r\n        position: relative;\r\n        overflow-y: scroll;\r\n      }\r\n\r\n      .modalBox {\r\n        height: auto;\r\n        top: 10%;\r\n        margin-bottom: 20px;\r\n        transform: translate(-50%, 0%);\r\n      }\r\n    }\r\n  }\r\n  @media only screen and (min-width: 992px) {\r\n    padding: 0 25px 35px;\r\n  }\r\n`;\r\n","import Styled from 'styled-components';\r\nimport { FoodItem } from '../FoodListTable/food/style';\r\nexport const SubFoodStyle = Styled.div`\r\n  @media (min-width: 992px) {\r\n\t  .details-holder{\r\n\t\t  float:right;\r\n\t  }\r\n\t${FoodItem}{\r\n\t\twidth: 100%;\r\n}\r\n\r\n`;\r\n","import React from 'react';\r\n\r\nimport DetailModal from '../FoodListTable/food/foodModal/index';\r\nimport FoodDetails from '../FoodListTable/food/details-holder/index';\r\nimport { FoodItem } from '../FoodListTable/food/style';\r\nimport { SubFoodStyle } from './style';\r\nimport { objectToArray } from '../../../Helper/index';\r\nimport { SubFoodState, ISubFood } from '../../../../Types/index';\r\ninterface IProps {\r\n\tsubFood: SubFoodState\r\n}\r\nconst SubFood: React.SFC<IProps> = ({ subFood }) => {\r\n\r\n\tconsole.log('ddd', subFood);\r\n\treturn (\r\n\t\t<SubFoodStyle>\r\n\t\t\t<DetailModal subfood={true} defaultDetail={subFood} food={subFood.food} />\r\n\t\t\t<div>\r\n\t\t\t\t{subFood.subFoods.map((food, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<FoodItem key={food.catId}>\r\n\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t<FoodDetails food={food} />\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</FoodItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</SubFoodStyle>\r\n\t);\r\n};\r\n\r\nexport default SubFood;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAFA;AACA;AAOA;;;;;;;;;;;;AARA;;;;;;;;;;;;;;;;;;;;;AALA;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAKA;AACA;;;;;;;;;;AANA;AACA;AAMA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AACA;AAuBA;AACA;AA+DA;AACA;AAlFA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAFA;AAFA;AAWA;AACA;AACA;AAAA;AAhBA;AACA;AAkBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AADA;AASA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAnGA;AACA;AADA;AACA;AA8GA;;;;;;;;;;;;AAtIA;AACA;AAMA;AASA;AAOA;;;;;;;;;;;;;;;;;;;;;;AA/BA;AAIA;AACA;AACA;AACA;;AACA;AACA;AAMA;AASA;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAAA;AACA;;;;;;;;;;AAAA;AAAA;AAAA;AACA;;;AAAA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AA1CA;AACA;AAwCA;;;;;;;;;;;;;;;;;;;AA3CA;;AAEA;AACA;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAAA;AACA;;;;;;;;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AADA;;;;;;;;;;;;;;;;;;;AAFA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;AAKA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AARA;AAHA;AACA;AAoBA;;;;;;;;;;;;AArBA;;;;;;;;;;;;;;;;;;;;;AAXA;AAEA;AACA;;AAQA;;;;;;;;;;;;;;;A","sourceRoot":""}